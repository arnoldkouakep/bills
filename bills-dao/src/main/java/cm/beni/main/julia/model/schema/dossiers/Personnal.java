package cm.beni.main.julia.model.schema.dossiers;
// Generated 2 aoï¿½t 2020 02:34:56 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Personnal generated by hbm2java
 */
@Entity
@Table(name = "personnal", schema = "dossiers", uniqueConstraints = { @UniqueConstraint(columnNames = "code"),
		@UniqueConstraint(columnNames = { "first_name", "last_name" }), @UniqueConstraint(columnNames = "numero_cni") })
//@JsonIdentityInfo(generator=ObjectIdGenerators.UUIDGenerator.class, property="@personnal", scope = Personnal.class, resolver = ObjectIdResolver.class)
public class Personnal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String identify;
	private String code;
	private String firstName;
	private String lastName;
	private String numeroCni;
	private String numeroContribuable;
	private String telephone;
	private String email;
	private String fax;
	private Set<Client> clients = new HashSet<Client>(0);
	private Set<Dossier> dossiersForExpediteur = new HashSet<Dossier>(0);
	private Set<Dossier> dossiersForDestinataire = new HashSet<Dossier>(0);

	public Personnal() {
	}

	public Personnal(String identify, String code, String firstName, String numeroCni) {
		this.identify = identify;
		this.code = code;
		this.firstName = firstName;
		this.numeroCni = numeroCni;
	}

	public Personnal(String identify, String code, String firstName, String lastName, String numeroCni,
			String numeroContribuable, String telephone, String email, String fax, Set<Client> clients,
			Set<Dossier> dossiersForExpediteur, Set<Dossier> dossiersForDestinataire) {
		this.identify = identify;
		this.code = code;
		this.firstName = firstName;
		this.lastName = lastName;
		this.numeroCni = numeroCni;
		this.numeroContribuable = numeroContribuable;
		this.telephone = telephone;
		this.email = email;
		this.fax = fax;
		this.clients = clients;
		this.dossiersForExpediteur = dossiersForExpediteur;
		this.dossiersForDestinataire = dossiersForDestinataire;
	}

	@Id

	@Column(name = "identify", unique = true, nullable = false, length = 64)
	public String getIdentify() {
		return this.identify;
	}

	public void setIdentify(String identify) {
		this.identify = identify;
	}

	@Column(name = "code", unique = true, nullable = false, length = 100)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "first_name", nullable = false, length = 200)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 200)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "numero_cni", unique = true, nullable = false, length = 64)
	public String getNumeroCni() {
		return this.numeroCni;
	}

	public void setNumeroCni(String numeroCni) {
		this.numeroCni = numeroCni;
	}

	@Column(name = "numero_contribuable", length = 100)
	public String getNumeroContribuable() {
		return this.numeroContribuable;
	}

	public void setNumeroContribuable(String numeroContribuable) {
		this.numeroContribuable = numeroContribuable;
	}

	@Column(name = "telephone")
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "email", length = 200)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fax", length = 100)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnal")
	public Set<Client> getClients() {
		return this.clients;
	}

	public void setClients(Set<Client> clients) {
		this.clients = clients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnalByExpediteur")
	public Set<Dossier> getDossiersForExpediteur() {
		return this.dossiersForExpediteur;
	}

	public void setDossiersForExpediteur(Set<Dossier> dossiersForExpediteur) {
		this.dossiersForExpediteur = dossiersForExpediteur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnalByDestinataire")
	public Set<Dossier> getDossiersForDestinataire() {
		return this.dossiersForDestinataire;
	}

	public void setDossiersForDestinataire(Set<Dossier> dossiersForDestinataire) {
		this.dossiersForDestinataire = dossiersForDestinataire;
	}

}
